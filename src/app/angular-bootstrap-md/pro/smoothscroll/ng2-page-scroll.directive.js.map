{"version":3,"sources":["../../../../src/app/typescripts/pro/smoothscroll/ng2-page-scroll.directive.ts"],"names":[],"mappings":"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","file":"ng2-page-scroll.directive.js","sourceRoot":"","sourcesContent":["import {\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnDestroy,\r\n    Inject,\r\n    Optional,\r\n    OnChanges,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {\r\n    Router,\r\n    NavigationEnd,\r\n    NavigationError,\r\n    NavigationCancel,\r\n    UrlTree\r\n} from '@angular/router';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\n\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nimport {PageScrollService} from './ng2-page-scroll.service';\r\nimport {PageScrollInstance} from './ng2-page-scroll-instance';\r\nimport {PageScrollUtilService as Util} from './ng2-page-scroll-util.service';\r\nimport {EasingLogic} from './ng2-page-scroll-config';\r\n\r\n\r\nexport class PageScroll implements OnChanges, OnDestroy {\r\n\r\n    \r\n    public routerLink: any;\r\n\r\n    \r\n    public href: string;\r\n\r\n    \r\n    public pageScrollHorizontal: boolean = null;\r\n\r\n    \r\n    public pageScrollOffset: number = null;\r\n\r\n    \r\n    public pageScrollDuration: number = null;\r\n\r\n    \r\n    public pageScrollSpeed: number = null;\r\n\r\n    \r\n    public pageScrollEasing: EasingLogic = null;\r\n\r\n    \r\n    public pageScrollInterruptible: boolean;\r\n\r\n    \r\n    public pageScrollAdjustHash = false;\r\n\r\n    \r\n    public pageScroll: string = null;\r\n\r\n    \r\n    pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    private pageScrollInstance: PageScrollInstance;\r\n    private document: Document;\r\n\r\n    constructor(private pageScrollService: PageScrollService,  private router: Router,  document: any) {\r\n        this.document = <Document> document;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // Some inputs changed, reset the pageScrollInstance\r\n        this.pageScrollInstance = undefined;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.pageScrollInstance) {\r\n            this.pageScrollService.stop(this.pageScrollInstance);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private generatePageScrollInstance(): PageScrollInstance {\r\n        if (Util.isUndefinedOrNull(this.pageScrollInstance)) {\r\n            this.pageScrollInstance = PageScrollInstance.newInstance({\r\n                document: this.document,\r\n                scrollTarget: this.href,\r\n                scrollingViews: null,\r\n                namespace: this.pageScroll,\r\n                verticalScrolling: !this.pageScrollHorizontal,\r\n                pageScrollOffset: this.pageScrollOffset,\r\n                pageScrollInterruptible: this.pageScrollInterruptible,\r\n                pageScrollEasingLogic: this.pageScrollEasing,\r\n                pageScrollDuration: this.pageScrollDuration,\r\n                pageScrollSpeed: this.pageScrollSpeed,\r\n                pageScrollFinishListener: this.pageScrollFinish\r\n            });\r\n        }\r\n        return this.pageScrollInstance;\r\n    }\r\n\r\n    private pushRouterState() {\r\n        if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.scrollTarget === 'string'\r\n            && this.pageScrollInstance.scrollTarget.substr(0, 1) === '#') {\r\n            // \"Navigate\" to the current route again and this time set the fragment/hash\r\n            this.router.navigate([], {\r\n                fragment: <string>this.pageScrollInstance.scrollTarget.substr(1),\r\n                preserveQueryParams: true\r\n            });\r\n        }\r\n    }\r\n\r\n    private scroll(): void {\r\n        let pageScrollInstance = this.generatePageScrollInstance();\r\n        this.pushRouterState();\r\n        this.pageScrollService.start(pageScrollInstance);\r\n    }\r\n\r\n    public handleClick(clickEvent: Event): boolean { // tslint:disable-line:no-unused-variable\r\n        if (this.routerLink && this.router !== null && this.router !== undefined) {\r\n            let urlTree: UrlTree;\r\n            if (typeof this.routerLink === 'string') {\r\n                urlTree = this.router.parseUrl(this.routerLink);\r\n            } else {\r\n                urlTree = this.router.createUrlTree(this.routerLink);\r\n            }\r\n            if (!this.router.isActive(urlTree, true)) {\r\n                // We need to navigate their first.\r\n                // Navigation is handled by the routerLink directive\r\n                // so we only need to listen for route change\r\n                let subscription: Subscription = <Subscription>this.router.events.subscribe((routerEvent) => {\r\n                    if (routerEvent instanceof NavigationEnd) {\r\n                        subscription.unsubscribe();\r\n                        this.scroll();\r\n                    } else if (routerEvent instanceof NavigationError || routerEvent instanceof NavigationCancel) {\r\n                        subscription.unsubscribe();\r\n                    }\r\n                });\r\n                return false; // to preventDefault()\r\n            }\r\n        }\r\n        this.scroll();\r\n        return false; // to preventDefault()\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[pageScroll]',\r\n    host: { // tslint:disable-line:use-host-property-decorator\r\n        '(click)': 'handleClick($event)',\r\n    }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageScrollService, },\n{type: Router, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'routerLink': [{ type: Input },],\n'href': [{ type: Input },],\n'pageScrollHorizontal': [{ type: Input },],\n'pageScrollOffset': [{ type: Input },],\n'pageScrollDuration': [{ type: Input },],\n'pageScrollSpeed': [{ type: Input },],\n'pageScrollEasing': [{ type: Input },],\n'pageScrollInterruptible': [{ type: Input },],\n'pageScrollAdjustHash': [{ type: Input },],\n'pageScroll': [{ type: Input },],\n'pageScrollFinish': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}