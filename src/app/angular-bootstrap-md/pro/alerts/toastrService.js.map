{"version":3,"sources":["../../../../src/app/typescripts/pro/alerts/toastrService.ts"],"names":[],"mappings":"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","file":"toastrService.js","sourceRoot":"","sourcesContent":["import { Injectable, Injector, ComponentRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Overlay } from './overlay/overlay';\r\nimport { ComponentPortal } from './portal/portal';\r\nimport { ToastConfig, ToastrConfig, ToastData } from './toastrConfig';\r\nimport { ToastInjector, ToastRef } from './toastInjector';\r\nimport { ToastContainerDirective } from './toastDirective';\r\n\r\nexport interface ActiveToast {\r\n  toastId?: number;\r\n  message?: string;\r\n  portal?: ComponentRef<any>;\r\n  toastRef?: ToastRef<any>;\r\n  onShown?: Observable<any>;\r\n  onHidden?: Observable<any>;\r\n  onTap?: Observable<any>;\r\n  onAction?: Observable<any>;\r\n}\r\n\r\n\r\nexport class ToastrService {\r\n  private index = 0;\r\n  private toasts: ActiveToast[] = [];\r\n  private previousToastMessage = '';\r\n  private currentlyActive = 0;\r\n  overlayContainer: ToastContainerDirective;\r\n\r\n  constructor(\r\n    public toastrConfig: ToastrConfig,\r\n    private overlay: Overlay,\r\n    private _injector: Injector\r\n  ) { }\r\n  /** show successful toast */\r\n  public show(message: string, title?: string, optionsOverride?: ToastConfig, type = '') {\r\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\r\n  }\r\n  /** show successful toast */\r\n  public success(message: string, title?: string, optionsOverride?: ToastConfig) {\r\n    const type = this.toastrConfig.iconClasses.success;\r\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\r\n  }\r\n  /** show error toast */\r\n  public error(message: string, title?: string, optionsOverride?: ToastConfig) {\r\n    const type = this.toastrConfig.iconClasses.error;\r\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\r\n  }\r\n  /** show info toast */\r\n  public info(message: string, title?: string, optionsOverride?: ToastConfig) {\r\n    const type = this.toastrConfig.iconClasses.info;\r\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\r\n  }\r\n  /** show warning toast */\r\n  public warning(message: string, title?: string, optionsOverride?: ToastConfig) {\r\n    const type = this.toastrConfig.iconClasses.warning;\r\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\r\n  }\r\n  createToastConfig(optionsOverride: ToastConfig): ToastConfig {\r\n    if (!optionsOverride) {\r\n      return Object.create(this.toastrConfig);\r\n    }\r\n    if (optionsOverride instanceof ToastConfig) {\r\n      return optionsOverride;\r\n    }\r\n    return new ToastConfig(optionsOverride);\r\n  }\r\n  /**\r\n   * Remove all or a single toast by id\r\n   */\r\n  public clear(toastId?: number) {\r\n    // Call every toastRef manualClose function\r\n    for (const toast of this.toasts) {\r\n      if (toastId !== undefined) {\r\n        if (toast.toastId === toastId) {\r\n          toast.toastRef.manualClose();\r\n          return;\r\n        }\r\n      } else {\r\n        toast.toastRef.manualClose();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Remove and destroy a single toast by id\r\n   */\r\n  public remove(toastId: number) {\r\n    const { index, activeToast } = this._findToast(toastId);\r\n    if (!activeToast) {\r\n      return false;\r\n    }\r\n    activeToast.toastRef.close();\r\n    this.toasts.splice(index, 1);\r\n    this.currentlyActive = this.currentlyActive - 1;\r\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\r\n      return false;\r\n    }\r\n    if (this.currentlyActive <= +this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\r\n      const p = this.toasts[this.currentlyActive].toastRef;\r\n      if (!p.isInactive()) {\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n        p.activate();\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Find toast object by id\r\n   */\r\n  private _findToast(toastId: number): { index: number | null, activeToast: ActiveToast | null } {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].toastId === toastId) {\r\n        return { index: i, activeToast: this.toasts[i] };\r\n      }\r\n    }\r\n    return { index: null, activeToast: null };\r\n  }\r\n  /**\r\n   * Determines if toast message is already shown\r\n   */\r\n  private isDuplicate(message: string) {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].message === message) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Creates and attaches toast data to component\r\n   */\r\n  private _buildNotification(\r\n    toastType: string,\r\n    message: string,\r\n    title: string,\r\n    optionsOverride: ToastConfig = Object.create(this.toastrConfig)\r\n  ) {\r\n    // max opened and auto dismiss = true\r\n    if (this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\r\n      return;\r\n    }\r\n    this.previousToastMessage = message;\r\n    let keepInactive = false;\r\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\r\n      keepInactive = true;\r\n      if (this.toastrConfig.autoDismiss) {\r\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\r\n      }\r\n    }\r\n    const overlayRef = this.overlay.create(optionsOverride.positionClass, this.overlayContainer);\r\n    const ins: ActiveToast = {\r\n      toastId: this.index++,\r\n      message,\r\n      toastRef: new ToastRef(overlayRef),\r\n    };\r\n    ins.onShown = ins.toastRef.afterActivate();\r\n    ins.onHidden = ins.toastRef.afterClosed();\r\n    const data = new ToastData();\r\n    data.toastId = ins.toastId;\r\n    data.optionsOverride = optionsOverride;\r\n    data.message = message;\r\n    data.title = title;\r\n    data.toastType = toastType;\r\n    data.onTap = new Subject();\r\n    ins.onTap = data.onTap.asObservable();\r\n    data.onAction = new Subject();\r\n    ins.onAction = data.onAction.asObservable();\r\n    const toastInjector = new ToastInjector(ins.toastRef, data, this._injector);\r\n    const component = new ComponentPortal(optionsOverride.toastComponent, toastInjector);\r\n    ins.portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\r\n    if (!keepInactive) {\r\n      setTimeout(() => {\r\n        ins.toastRef.activate();\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n      });\r\n    }\r\n    this.toasts.push(ins);\r\n    return ins;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ToastrConfig, },\n{type: Overlay, },\n{type: Injector, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}