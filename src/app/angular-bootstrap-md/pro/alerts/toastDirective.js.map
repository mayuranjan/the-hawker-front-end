{"version":3,"sources":["../../../../src/app/typescripts/pro/alerts/toastDirective.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA+B,SAAA,EAAW,UAAA,EAAW,MAAO,eAAA,CAAgB;AAGrF;IACE,iCAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAG,CAAC;IACtC,qDAAmB,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;IAC/B,CAAC;IAWH,8BAAC;AAAD,CAfA,AAeC;;AAVM,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE,gBAAgB;aAC3B,EAAG,EAAE;CACL,CAAC;AAEK,sCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAF6F,CAE7F,CAAC;AAIF;IAAA;IAgBA,CAAC;IAfQ,4BAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAUH,2BAAC;AAAD,CAhBA,AAgBC;;AATM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,uBAAuB,CAAC;gBAClC,YAAY,EAAE,CAAC,uBAAuB,CAAC;aACxC,EAAG,EAAE;CACL,CAAC;AAEK,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"toastDirective.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders, Directive, ElementRef } from '@angular/core';\r\n\r\n\r\nexport class ToastContainerDirective {\r\n  constructor(private el: ElementRef) {}\r\n  getContainerElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[toastContainer]',\r\n  exportAs: 'toastContainer',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\r\n\r\n\r\nexport class ToastContainerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastContainerModule,\r\n      providers: []\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  exports: [ToastContainerDirective],\r\n  declarations: [ToastContainerDirective],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}