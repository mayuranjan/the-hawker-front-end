{"version":3,"sources":["../../../../src/app/typescripts/pro/alerts/toastrModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA+B,WAAA,EAAY,MAAO,eAAA,CAAgB;AAC3E,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAE/C,OAAO,EAAE,KAAA,EAAM,MAAO,kBAAA,CAAmB;AACzC,OAAO,EAAE,aAAA,EAAc,MAAO,iBAAA,CAAkB;AAChD,OAAO,EAAE,YAAA,EAAa,MAAO,gBAAA,CAAiB;AAC9C,OAAO,EAAE,gBAAA,EAAiB,MAAO,6BAAA,CAA8B;AAC/D,OAAO,EAAE,OAAA,EAAQ,MAAO,mBAAA,CAAoB;AAE5C,MAAM,CAAC,IAAM,YAAA,GAAe,IAAI,WAAA,CAAY,aAAC,CAAa,CAAC;AAE3D,MAAM,8BAA8B,MAAQ;IAC1C,MAAM,CAAC,IAAI,YAAA,CAAa,MAAC,CAAM,CAAC;AAClC,CAAC;AAGD;IAAA;IAwBA,CAAC;IAvBQ,oBAAO,GAAd,UAAe,MAAqB;QAClC,MAAM,CAAC;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAC3C,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE;gBAChF,gBAAgB;gBAChB,OAAO;gBACP,aAAa;aACd;SACF,CAAC;IACJ,CAAC;IAYH,mBAAC;AAAD,CAxBA,AAwBC;;AAXM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,KAAK,CAAC;gBAChB,YAAY,EAAE,CAAC,KAAK,CAAC;gBACrB,eAAe,EAAE,CAAC,KAAK,CAAC;aACzB,EAAG,EAAE;CACL,CAAC;AAEK,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"toastrModule.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders, OpaqueToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Toast } from './toastComponent';\r\nimport { ToastrService } from './toastrService';\r\nimport { ToastrConfig } from './toastrConfig';\r\nimport { OverlayContainer } from './overlay/overlay-container';\r\nimport { Overlay } from './overlay/overlay';\r\n\r\nexport const TOAST_CONFIG = new OpaqueToken('ToastConfig');\r\n\r\nexport function provideToastrConfig(config: ToastrConfig) {\r\n  return new ToastrConfig(config);\r\n}\r\n\r\n\r\nexport class ToastrModule {\r\n  static forRoot(config?: ToastrConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastrModule,\r\n      providers: [\r\n        { provide: TOAST_CONFIG, useValue: config },\r\n        { provide: ToastrConfig, useFactory: provideToastrConfig, deps: [TOAST_CONFIG] },\r\n        OverlayContainer,\r\n        Overlay,\r\n        ToastrService\r\n      ]\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [CommonModule],\r\n  exports: [Toast],\r\n  declarations: [Toast],\r\n  entryComponents: [Toast],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}