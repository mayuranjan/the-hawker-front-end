{"version":3,"sources":["../../../../../src/app/typescripts/pro/progress-bars/progress-bars/progress-bar.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,WAAW,EACX,KAAK,GACN,MAAM,eAAA,CAAgB;AAUvB;IAAA;QAEG,UAAK,GAAkC,SAAS,CAAC;QAE1C,WAAM,GAAW,CAAC,CAAC;QAQnB,iBAAY,GAAW,CAAC,CAAC;QAgBjC,SAAI,GAAyD,aAAa,CAAC;IA0L7E,CAAC;IA7MC,sBAAI,gCAAK;aAAT,cAAc,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACnC,UAAU,CAAS,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;;OADlB;IAOnC,sBAAI,sCAAW;aAAf,cAAoB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aAC/C,UAAgB,CAAS,IAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;;OADlB;IAe/C,yCAAiB,GAAjB;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAC7B,MAAM,CAAC,EAAC,SAAS,EAAE,YAAU,KAAK,MAAG,EAAC,CAAC;IACzC,CAAC;IAMD,wCAAgB,GAAhB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACnC,MAAM,CAAC,EAAC,SAAS,EAAE,YAAU,KAAK,MAAG,EAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAyKH,oBAAC;AAAD,CAtNA,AAsNC;;AAxKM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mCAAmC;gBAC7C,IAAI,EAAE;oBACJ,MAAM,EAAE,aAAa;oBACrB,eAAe,EAAE,GAAG;oBACpB,eAAe,EAAE,KAAK;oBACtB,qBAAqB,EAAE,oBAAoB;oBAC3C,oBAAoB,EAAE,mBAAmB;oBACzC,kBAAkB,EAAE,iBAAiB;oBACrC,0BAA0B,EAAE,MAAM;iBACnC;gBACD,QAAQ,EAAE,miBAKT;gBACD,MAAM,EAAE,CAAC,05IAyIN,CAAC;gBACJ,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AAEK,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,4BAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,oBAAoB,EAAG,EAAE,EAAE;IACjF,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;CACtE,CAAC;AAIF,eAZe,CAAG,EAAQ,GAAM,EAAG,GAAM;IAAf,oBAAA,EAAA,OAAM;IAAG,oBAAA,EAAA,SAAM;IAavC,MAAM,CAZC,IAAA,CAAK,GAAC,CAAG,GAAC,EAAI,IAAA,CAAK,GAAC,CAAG,GAAC,EAAI,CAAA,CAAE,CAAC,CAAC;AAazC,CAAC","file":"progress-bar.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  HostBinding,\r\n  Input,\r\n} from '@angular/core';\r\n\r\n// TODO(josephperrott): Benchpress tests.\r\n// TODO(josephperrott): Add ARIA attributes for progressbar \"for\".\r\n\r\n\r\n/**\r\n * <md-progress-bar> component.\r\n */\r\n\r\nexport class MdProgressBar {\r\n  /** Color of the progress bar. */\r\n   color: 'primary' | 'accent' | 'warn' = 'primary';\r\n\r\n  private _value: number = 0;\r\n\r\n  /** Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow. */\r\n  \r\n  \r\n  get value() { return this._value; }\r\n  set value(v: number) { this._value = clamp(v || 0); }\r\n\r\n  private _bufferValue: number = 0;\r\n\r\n  /** Buffer value of the progress bar. Defaults to zero. */\r\n  \r\n  get bufferValue() { return this._bufferValue; }\r\n  set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n\r\n  /**\r\n   * Mode of the progress bar.\r\n   *\r\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\r\n   * 'determinate'.\r\n   * Mirrored to mode attribute.\r\n   */\r\n  \r\n  \r\n  mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\r\n\r\n  /** Gets the current transform value for the progress bar's primary indicator. */\r\n  _primaryTransform() {\r\n    let scale = this.value / 100;\r\n    return {transform: `scaleX(${scale})`};\r\n  }\r\n\r\n  /**\r\n   * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\r\n   * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\r\n   */\r\n  _bufferTransform() {\r\n    if (this.mode == 'buffer') {\r\n      let scale = this.bufferValue / 100;\r\n      return {transform: `scaleX(${scale})`};\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'md-progress-bar, mat-progress-bar',\r\n  host: {\r\n    'role': 'progressbar',\r\n    'aria-valuemin': '0',\r\n    'aria-valuemax': '100',\r\n    '[class.mat-primary]': 'color == \"primary\"',\r\n    '[class.mat-accent]': 'color == \"accent\"',\r\n    '[class.mat-warn]': 'color == \"warn\"',\r\n    '[class.mat-progress-bar]': 'true',\r\n  },\r\n  template: `<!-- The background div is named as such because it appears below the other divs and is not sized based on values. -->\r\n    <div class=\"mat-progress-bar-background mat-progress-bar-element\"></div>\r\n    <div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div>\r\n    <div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\"></div>\r\n    <div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display:block;\r\n      height:5px;\r\n      overflow:hidden;\r\n      position:relative;\r\n      transform:translateZ(0);\r\n      transition:opacity 250ms linear;\r\n      width:100%;\r\n    }\r\n    :host .mat-progress-bar-element,:host .mat-progress-bar-fill::after {\r\n      height:100%;\r\n      position:absolute;\r\n      width:100%;\r\n    }\r\n    :host .mat-progress-bar-background {\r\n      background-repeat:repeat-x;\r\n      background-size:10px 4px;\r\n      display:none;\r\n    }\r\n    :host .mat-progress-bar-buffer {\r\n      transform-origin:top left;\r\n      transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1);\r\n    }\r\n    :host .mat-progress-bar-secondary {\r\n      display:none;\r\n    } \r\n    :host .mat-progress-bar-fill {\r\n      animation:none;\r\n      transform-origin:top left;\r\n      transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1);\r\n    }\r\n    :host .mat-progress-bar-fill::after {\r\n      animation:none;\r\n      content:'';\r\n      display:inline-block;\r\n      left:0;\r\n    }\r\n    :host[mode=query] {\r\n      transform:rotateZ(180deg);\r\n    }\r\n    :host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill {\r\n      transition:none;\r\n    }\r\n    :host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary {\r\n      animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;\r\n      left:-145.166611%;\r\n    }\r\n    :host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after {\r\n      animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear;\r\n    }\r\n    :host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary {\r\n      animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;\r\n      left:-54.888891%;\r\n      display:block;\r\n    }\r\n    :host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after {\r\n      animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear;\r\n    }\r\n    :host[mode=buffer] .mat-progress-bar-background {\r\n      animation:mat-progress-bar-background-scroll 250ms infinite linear;\r\n      display:block;\r\n    }\r\n    :host-context([dir=rtl]) {\r\n      transform:rotateY(180deg);\r\n    }\r\n    @keyframes mat-progress-bar-primary-indeterminate-translate {\r\n      0% {\r\n        transform:translateX(0);\r\n      }\r\n      20% {\r\n        animation-timing-function:cubic-bezier(.5,0,.70173,.49582);\r\n        transform:translateX(0);\r\n      }\r\n      59.15% {\r\n        animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);\r\n        transform:translateX(83.67142%);\r\n      }\r\n      100% {\r\n        transform:translateX(200.61106%);\r\n      }\r\n    }\r\n    @keyframes mat-progress-bar-primary-indeterminate-scale {\r\n      0% {\r\n        transform:scaleX(.08);\r\n      }\r\n      36.65% {\r\n        animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);\r\n        transform:scaleX(.08);\r\n      }\r\n      69.15% {\r\n        animation-timing-function:cubic-bezier(.06,.11,.6,1);\r\n        transform:scaleX(.66148);\r\n      } \r\n      100% {\r\n        transform:scaleX(.08);\r\n      }\r\n    }\r\n    @keyframes mat-progress-bar-secondary-indeterminate-translate {\r\n      0% {\r\n        animation-timing-function:cubic-bezier(.15,0,.51506,.40969);\r\n        transform:translateX(0);\r\n      }\r\n      25% {\r\n        animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);\r\n        transform:translateX(37.65191%);\r\n      }\r\n      48.35% {\r\n        animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);\r\n        transform:translateX(84.38617%);\r\n      }\r\n      100% {\r\n        transform:translateX(160.27778%);\r\n      }\r\n    }\r\n    @keyframes mat-progress-bar-secondary-indeterminate-scale {\r\n      0% {\r\n        animation-timing-function:cubic-bezier(.15,0,.51506,.40969);\r\n        transform:scaleX(.08);\r\n      }\r\n      19.15% {\r\n        animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);\r\n        transform:scaleX(.4571)\r\n      } \r\n      44.15% {\r\n        animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);\r\n        transform:scaleX(.72796);\r\n      }\r\n      100% {\r\n        transform:scaleX(.08);\r\n      }\r\n    }\r\n    @keyframes mat-progress-bar-background-scroll {\r\n      to {\r\n        transform:translateX(-10px)\r\n      }\r\n    }  \r\n    `],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'value': [{ type: Input },{ type: HostBinding, args: ['attr.aria-valuenow', ] },],\n'bufferValue': [{ type: Input },],\n'mode': [{ type: Input },{ type: HostBinding, args: ['attr.mode', ] },],\n};\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n  return Math.max(min, Math.min(max, v));\r\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}