{"version":3,"sources":["../../../../src/app/typescripts/pro/progress-bars/barComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,IAAA,EAAM,KAAA,EAAyB,MAAO,eAAA,CAAgB;AAE1E,OAAO,EAAE,iBAAA,EAAkB,MAAO,qBAAA,CAAsB;AAKxD;IAyBE,sBAAoB,QAA0B;QANvC,YAAO,GAAU,CAAC,CAAC;QAOxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IApBD,sBAAW,+BAAK;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAiB,CAAQ;YACvB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;;;OARA;IAoBM,+BAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,kCAAW,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,4CAAqB,GAA5B;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElE,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAY,EAAE,GAAgB;YACtF,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,EAAE,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;QACxC,CAAC;IACH,CAAC;IAyBH,mBAAC;AAAD,CAxEA,AAwEC;;AAxBM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,6ZAUX;aACA,EAAG,EAAE;CACL,CAAC;AAEK,2BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;CACxD,EAF6F,CAE7F,CAAC;AACK,2BAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC","file":"barComponent.js","sourceRoot":"","sourcesContent":["import { Component, Host, Input, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { ProgressDirective } from './progressDirective';\r\n\r\n// todo: number pipe\r\n// todo: use query from progress?\r\n\r\nexport class BarComponent implements OnInit, OnDestroy {\r\n  public max:number;\r\n\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n   public type:string;\r\n  /** current value of progress bar */\r\n  \r\n  public get value():number {\r\n    return this._value;\r\n  }\r\n\r\n  public set value(v:number) {\r\n    if (!v && v !== 0) {\r\n      return;\r\n    }\r\n    this._value = v;\r\n    this.recalculatePercentage();\r\n  }\r\n\r\n  public percent:number = 0;\r\n  public transition:string;\r\n  public progress:ProgressDirective;\r\n\r\n  protected _value:number;\r\n\r\n  public constructor( progress:ProgressDirective) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  public ngOnInit():void {\r\n    this.progress.addBar(this);\r\n  }\r\n\r\n  public ngOnDestroy():void {\r\n    this.progress.removeBar(this);\r\n  }\r\n\r\n  public recalculatePercentage():void {\r\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\r\n\r\n    let totalPercentage = this.progress.bars.reduce(function (total:number, bar:BarComponent):number {\r\n      return total + bar.percent;\r\n    }, 0);\r\n\r\n    if (totalPercentage > 100) {\r\n      this.percent -= totalPercentage - 100;\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'bar',\r\n  template: `\r\n  <div class=\"progress-bar\"\r\n    style=\"min-width: 0;\"\r\n    role=\"progressbar\"\r\n    [ngClass]=\"type && 'progress-bar-' + type\"\r\n    [ngStyle]=\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\"\r\n    aria-valuemin=\"0\"\r\n    [attr.aria-valuenow]=\"value\"\r\n    [attr.aria-valuetext]=\"percent.toFixed(0) + '%'\"\r\n    [attr.aria-valuemax]=\"max\"><ng-content></ng-content></div>\r\n`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProgressDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}