{"version":3,"sources":["../../../../../src/app/typescripts/pro/date-picker/directives/datepickerFocusDirective.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,QAAA,EAAyB,KAAA,EAAM,MAAO,eAAA,CAAgB;AAItF;IAGI,wBAAoB,EAAc,EAAU,QAAkB;QAA1C,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAGlE,wCAAe,GAAf;QAKI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAO1E,CAAC;IAcL,qBAAC;AAAD,CAhCA,AAgCC;;AAbM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,aAAa;aAC1B,EAAG,EAAE;CACL,CAAC;AAEK,6BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAH6F,CAG7F,CAAC;AACK,6BAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;CACjD,CAAC","file":"datepickerFocusDirective.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Renderer, AfterViewInit, Input } from \"@angular/core\";\r\n\r\n\r\n\r\nexport class FocusDirective implements AfterViewInit {\r\n     value: string;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer) {}\r\n\r\n    // Focus to element: if value 0 = don't set focus, 1 = set only focus, 2 = set focus and set cursor position\r\n    ngAfterViewInit() {\r\n        // if (this.value === \"0\") {\r\n        //     return;\r\n        // }\r\n\r\n        this.renderer.invokeElementMethod(this.el.nativeElement, \"focus\", []);\r\n\r\n        // // Set cursor position at the end of text if input element\r\n        // if (this.value === \"2\") {\r\n        //     let len = this.el.nativeElement.value.length;\r\n        //     this.el.nativeElement.setSelectionRange(len, len);\r\n        // }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: \"[mydpfocus]\"\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input, args: [\"mydpfocus\", ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}