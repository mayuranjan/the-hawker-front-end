{"version":3,"sources":["../../../../../src/app/typescripts/pro/date-picker/services/datepickerUtilService.ts"],"names":[],"mappings":"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","file":"datepickerUtilService.js","sourceRoot":"","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { IMyDate } from \"../interfaces/dateInterface\";\r\nimport { IMyDateRange } from \"../interfaces/dateRangeInterface\";\r\nimport { IMyMonth } from \"../interfaces/monthInterface\";\r\nimport { IMyMonthLabels } from \"../interfaces/monthLabelsInterface\";\r\nimport { IMyMarkedDates } from \"../interfaces/markedDatesInterface\";\r\nimport { IMyMarkedDate } from \"../interfaces/markedDateInterface\";\r\n\r\n\r\nexport class UtilService {\r\n    isDateValid(dateStr: string, dateFormat: string, minYear: number, maxYear: number, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate>, disableDateRanges: Array<IMyDateRange>, monthLabels: IMyMonthLabels, enableDays: Array<IMyDate>): IMyDate {\r\n        let returnDate: IMyDate = {day: 0, month: 0, year: 0};\r\n        let daysInMonth: Array<number> = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        let isMonthStr: boolean = this.getDatePartIndex(dateFormat, \"mmm\") !== -1;\r\n\r\n        if (dateStr.length !== dateFormat.length) {\r\n            return returnDate;\r\n        }\r\n\r\n        let separator: string = this.getDateFormatSeparator(dateFormat);\r\n\r\n        let parts: Array<string> = dateStr.split(separator);\r\n        if (parts.length !== 3) {\r\n            return returnDate;\r\n        }\r\n\r\n        let day: number = this.parseDatePartNumber(dateFormat, dateStr, \"dd\");\r\n        let month: number = isMonthStr ? this.parseDatePartMonthName(dateFormat, dateStr, \"mmm\", monthLabels) : this.parseDatePartNumber(dateFormat, dateStr, \"mm\");\r\n        let year: number = this.parseDatePartNumber(dateFormat, dateStr, \"yyyy\");\r\n\r\n        if (day !== -1 && month !== -1 && year !== -1) {\r\n            if (year < minYear || year > maxYear || month < 1 || month > 12) {\r\n                return returnDate;\r\n            }\r\n\r\n            let date: IMyDate = {year: year, month: month, day: day};\r\n\r\n            if (this.isDisabledDay(date, disableUntil, disableSince, disableWeekends, disableDays, disableDateRanges, enableDays)) {\r\n                return returnDate;\r\n            }\r\n\r\n            if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n                daysInMonth[1] = 29;\r\n            }\r\n\r\n            if (day < 1 || day > daysInMonth[month - 1]) {\r\n                return returnDate;\r\n            }\r\n\r\n            // Valid date\r\n            return date;\r\n        }\r\n        return returnDate;\r\n    }\r\n\r\n    getDateFormatSeparator(dateFormat: string): string {\r\n        return dateFormat.replace(/[dmy]/g, \"\")[0];\r\n    }\r\n\r\n    isMonthLabelValid(monthLabel: string, monthLabels: IMyMonthLabels): number {\r\n        for (let key = 1; key <= 12; key++) {\r\n            if (monthLabel.toLowerCase() === monthLabels[key].toLowerCase()) {\r\n                return key;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    isYearLabelValid(yearLabel: number, minYear: number, maxYear: number): number {\r\n        if (yearLabel >= minYear && yearLabel <= maxYear) {\r\n            return yearLabel;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    parseDatePartNumber(dateFormat: string, dateString: string, datePart: string): number {\r\n        let pos: number = this.getDatePartIndex(dateFormat, datePart);\r\n        if (pos !== -1) {\r\n            let value: string = dateString.substring(pos, pos + datePart.length);\r\n            if (!/^\\d+$/.test(value)) {\r\n                return -1;\r\n            }\r\n            return parseInt(value);\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    parseDatePartMonthName(dateFormat: string, dateString: string, datePart: string, monthLabels: IMyMonthLabels): number {\r\n        let pos: number = this.getDatePartIndex(dateFormat, datePart);\r\n        if (pos !== -1) {\r\n            return this.isMonthLabelValid(dateString.substring(pos, pos + datePart.length), monthLabels);\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    getDatePartIndex(dateFormat: string, datePart: string): number {\r\n        return dateFormat.indexOf(datePart);\r\n    }\r\n\r\n    parseDefaultMonth(monthString: string): IMyMonth {\r\n        let month: IMyMonth = {monthTxt: \"\", monthNbr: 0, year: 0};\r\n        if (monthString !== \"\") {\r\n            let split = monthString.split(monthString.match(/[^0-9]/)[0]);\r\n            month.monthNbr = split[0].length === 2 ? parseInt(split[0]) : parseInt(split[1]);\r\n            month.year = split[0].length === 2 ? parseInt(split[1]) : parseInt(split[0]);\r\n        }\r\n        return month;\r\n    }\r\n\r\n    isDisabledDay(date: IMyDate, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate>, disableDateRanges: Array<IMyDateRange>, enableDays: Array<IMyDate>): boolean {\r\n        for (let e of enableDays) {\r\n            if (e.year === date.year && e.month === date.month && e.day === date.day) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        let dateMs: number = this.getTimeInMilliseconds(date);\r\n        if (this.isInitializedDate(disableUntil) && dateMs <= this.getTimeInMilliseconds(disableUntil)) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isInitializedDate(disableSince) && dateMs >= this.getTimeInMilliseconds(disableSince)) {\r\n            return true;\r\n        }\r\n\r\n        if (disableWeekends) {\r\n            let dn = this.getDayNumber(date);\r\n            if (dn === 0 || dn === 6) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (let d of disableDays) {\r\n            if (d.year === date.year && d.month === date.month && d.day === date.day) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (let d of disableDateRanges) {\r\n            if (this.isInitializedDate(d.begin) && this.isInitializedDate(d.end) && dateMs >= this.getTimeInMilliseconds(d.begin) && dateMs <= this.getTimeInMilliseconds(d.end)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate {\r\n        for (let md of markedDates) {\r\n            for (let d of md.dates) {\r\n                if (d.year === date.year && d.month === date.month && d.day === date.day) {\r\n                    return {marked: true, color: md.color};\r\n                }\r\n            }\r\n        }\r\n        if (markWeekends && markWeekends.marked) {\r\n            let dayNbr = this.getDayNumber(date);\r\n            if (dayNbr === 0 || dayNbr === 6) {\r\n                return {marked: true, color: markWeekends.color};\r\n            }\r\n        }\r\n        return {marked: false, color: \"\"};\r\n    }\r\n\r\n    getWeekNumber(date: IMyDate): number {\r\n        let d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\r\n        d.setDate(d.getDate() + (d.getDay() === 0 ? -3 : 4 - d.getDay()));\r\n        return Math.round(((d.getTime() - new Date(d.getFullYear(), 0, 4).getTime()) / 86400000) / 7) + 1;\r\n    }\r\n\r\n    isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean {\r\n        return this.isInitializedDate(disableUntil) && this.getTimeInMilliseconds(date) <= this.getTimeInMilliseconds(disableUntil);\r\n    }\r\n\r\n    isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean {\r\n        return this.isInitializedDate(disableSince) && this.getTimeInMilliseconds(date) >= this.getTimeInMilliseconds(disableSince);\r\n    }\r\n\r\n    isInitializedDate(date: IMyDate): boolean {\r\n        return date.year !== 0 && date.month !== 0 && date.day !== 0;\r\n    }\r\n\r\n    getTimeInMilliseconds(date: IMyDate): number {\r\n        return new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0).getTime();\r\n    }\r\n\r\n    getDayNumber(date: IMyDate): number {\r\n        let d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\r\n        return d.getDay();\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}