{"version":3,"sources":["../../../../src/app/typescripts/pro/stickyContent/computed-style.ts"],"names":[],"mappings":"AAMA,MAAM,wBAAwB,OAA6B,EAAE,SAAiB;IAC5E,IAAI,EAAO,CAAC;IACZ,EAAE,GAAI,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,GAAiB,QAAQ,CAAC,aAAa,CAAS,OAAO,CAAE,GAAG,OAAO,CAAC;IAEvG,IAAI,KAAU,EAAE,WAAW,GAAQ,CAAC,EAAE,CAAC,aAAa,IAAI,QAAQ,CAAC,CAAC,WAAW,CAAC;IAE9E,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAGhD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAC/D,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IAC5E,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAE9B,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,UAAS,GAAG,EAAE,MAAM;YAC3D,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,CAAC,UAAS,KAAU;gBACzB,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gBACjE,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gBAClD,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC;gBAC3B,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;gBACrC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;gBACxB,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACZ,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;AACH,CAAC","file":"computed-style.js","sourceRoot":"","sourcesContent":["/**\r\n * returns coumputed style of given element\r\n * @param el\r\n * @param styleProp\r\n * @returns {any}\r\n */\r\nexport function computedStyle(element: string | HTMLElement, styleProp: string): string {\r\n  let el: any;\r\n  el =  (typeof element === 'string') ? (<HTMLElement>document.querySelector(<string>element)) : element;\r\n\r\n  var value: any, defaultView: any = (el.ownerDocument || document).defaultView;\r\n  // W3C standard way:\r\n  if (defaultView && defaultView.getComputedStyle) {\r\n    // sanitize property name to css notation\r\n    // (hypen separated words eg. font-Size)\r\n    styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\r\n  } else if (el['currentStyle']) { // IE\r\n    // sanitize property name to camelCase\r\n    styleProp = styleProp.replace(/\\-(\\w)/g, function(str, letter) {\r\n      return letter.toUpperCase();\r\n    });\r\n    value = el['currentStyle'][styleProp];\r\n    // convert other units to pixels on IE\r\n    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\r\n      return (function(value: any) {\r\n        var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\r\n        el['runtimeStyle'].left = el['currentStyle'].left;\r\n        el.style.left = value || 0;\r\n        value = el.style['pixelLeft'] + \"px\";\r\n        el.style.left = oldLeft;\r\n        el['runtimeStyle'].left = oldRsLeft;\r\n        return value;\r\n      })(value);\r\n    }\r\n    return value;\r\n  }\r\n}"]}