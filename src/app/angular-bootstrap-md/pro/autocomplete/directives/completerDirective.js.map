{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/directives/completerDirective.ts"],"names":[],"mappings":"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","file":"completerDirective.js","sourceRoot":"","sourcesContent":["import { Directive, EventEmitter, Output } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completerItemComponent\";\r\n\r\nexport interface CompleterList {\r\n    search(term: string): void;\r\n    open(): void;\r\n    isOpen(open: boolean): void;\r\n    clear(): void;\r\n}\r\n\r\nexport interface CompleterDropdown {\r\n    clear(): void;\r\n    selectCurrent(): void;\r\n    nextRow(): void;\r\n    prevRow(): void;\r\n}\r\n\r\n\r\nexport class CtrCompleter {\r\n     public selected = new EventEmitter<CompleterItem>();\r\n     public highlighted = new EventEmitter<CompleterItem>();\r\n     public opened = new EventEmitter<boolean>();\r\n\r\n    private list: CompleterList;\r\n    private dropdown: CompleterDropdown;\r\n    private _hasHighlighted = false;\r\n    private _hasSelected = false;\r\n    private _cancelBlur = false;\r\n    private _isOpen = false;\r\n    private _autoHighlightIndex: number;\r\n\r\n    public registerList(list: CompleterList) {\r\n        this.list = list;\r\n    }\r\n\r\n    public registerDropdown(dropdown: CompleterDropdown) {\r\n        this.dropdown = dropdown;\r\n    }\r\n\r\n    public onHighlighted(item: CompleterItem) {\r\n        this.highlighted.emit(item);\r\n        this._hasHighlighted = !!item;\r\n    }\r\n\r\n    public onSelected(item: CompleterItem, clearList = true) {\r\n        this.selected.emit(item);\r\n        if (item) {\r\n            this._hasSelected = true;\r\n        }\r\n        if (clearList) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    public search(term: string) {\r\n        if (this._hasSelected) {\r\n            this.selected.emit(null);\r\n            this._hasSelected = false;\r\n        }\r\n        if (this.list) {\r\n            this.list.search(term);\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.dropdown) {\r\n            this.dropdown.clear();\r\n        }\r\n        if (this.list) {\r\n            this.list.clear();\r\n        }\r\n        this._hasHighlighted = false;\r\n        this.isOpen = false;\r\n    }\r\n\r\n    public selectCurrent() {\r\n        if (this.dropdown) {\r\n            this.dropdown.selectCurrent();\r\n        }\r\n    }\r\n\r\n    public nextRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.nextRow();\r\n        }\r\n    }\r\n\r\n    public prevRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.prevRow();\r\n        }\r\n    }\r\n\r\n    public hasHighlighted() {\r\n        return this._hasHighlighted;\r\n    }\r\n\r\n    public cancelBlur(cancel: boolean) {\r\n        this._cancelBlur = cancel;\r\n    }\r\n\r\n    public isCancelBlur() {\r\n        return this._cancelBlur;\r\n    }\r\n\r\n    public open() {\r\n        if (!this._isOpen) {\r\n            this.isOpen = true;\r\n            this.list.open();\r\n        }\r\n    }\r\n\r\n    public get isOpen() {\r\n        return this._isOpen;\r\n    }\r\n\r\n    public set isOpen(open: boolean) {\r\n        this._isOpen = open;\r\n        this.opened.emit(this._isOpen);\r\n        if (this.list) {\r\n            this.list.isOpen(open);\r\n        }\r\n    }\r\n\r\n    public get autoHighlightIndex() {\r\n        return this._autoHighlightIndex;\r\n    }\r\n\r\n    public set autoHighlightIndex(index: number) {\r\n        this._autoHighlightIndex = index;\r\n    }\r\n\r\n    public get hasSelected() {\r\n        return this._hasSelected;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: \"[ctrCompleter]\",\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'opened': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}