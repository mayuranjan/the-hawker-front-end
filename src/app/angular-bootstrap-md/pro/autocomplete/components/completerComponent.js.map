{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/components/completerComponent.ts"],"names":[],"mappings":"AAAA,YAAC,CAAY;AACb,OAAO,EAAoB,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAsB,SAAA,EAAW,UAAA,EAAsC,MAAO,eAAA,CAAgB;AACnJ,OAAO,EAAwB,WAAA,EAAa,iBAAA,EAAkB,MAAO,gBAAA,CAAiB;AAEtF,OAAO,EAAE,YAAA,EAAa,MAAO,kCAAA,CAAmC;AAEhE,OAAO,EAAE,gBAAA,EAAiB,MAAO,8BAAA,CAA+B;AAEhE,OAAO,EAAE,SAAA,EAAW,iBAAA,EAAmB,KAAA,EAAO,cAAA,EAAgB,eAAA,EAAgB,MAAO,YAAA,CAAa;AAGlG,OAAO,yBAAA,CAA0B;AAEjC,IAAM,IAAA,GAAO,cAAM,CAAA,CAAI;AAEvB,IAAM,gCAAA,GAAmC;IACrC,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,YAAA,EAAA,CAAA,CAAa;IAC3C,KAAK,EAAE,IAAA;CACV,CAAC;AAIF;IAiDI,sBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QA/C9C,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAW,EAAE,CAAC;QACrB,UAAK,GAAG,KAAK,CAAC;QACd,oBAAe,GAAG,iBAAiB,CAAC;QACpC,aAAQ,GAAG,SAAS,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAAG,KAAK,CAAC;QACtB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,IAAI,CAAC;QACvB,gBAAW,GAAG,EAAE,CAAC;QAGjB,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QAErB,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QAEpB,kBAAa,GAAG,KAAK,CAAC;QAGvB,YAAO,GAAY,KAAK,CAAC;QAGxB,aAAQ,GAAG,IAAI,YAAY,EAAiB,CAAC;QAC7C,gBAAW,GAAG,IAAI,YAAY,EAAiB,CAAC;QAChD,SAAI,GAAG,IAAI,YAAY,EAAQ,CAAC;QAChC,eAAU,GAAG,IAAI,YAAY,EAAQ,CAAC;QACtC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QACrC,UAAK,GAAsB,IAAI,YAAY,EAAE,CAAC;QAC9C,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;QAKjD,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAE7B,qBAAgB,GAAG,IAAI,CAAC;QACxB,qBAAgB,GAAG,IAAI,CAAC;QACxB,uBAAkB,GAAe,IAAI,CAAC;QACtC,sBAAiB,GAAqB,IAAI,CAAC;QAC3C,WAAM,GAAY,KAAK,CAAC;QACxB,UAAK,GAAY,KAAK,CAAC;QACvB,mBAAc,GAAG,eAAe,CAAC;QACjC,mBAAc,GAAG,cAAc,CAAC;IAEkB,CAAC;IAE3D,sBAAI,+BAAK;aAAT,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAE3C,UAAU,CAAM;YACZ,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACvB,CAAC;YAED,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;;;OAR0C;IAAA,CAAC;IAUrC,sCAAe,GAAtB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,yCAAkB,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;IACL,CAAC;IAEM,gCAAS,GAAhB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEM,iCAAU,GAAjB,UAAkB,KAAU;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,EAAO;QAC3B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEM,wCAAiB,GAAxB,UAAyB,EAAO;QAC5B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,CAAC;IAGD,sBAAW,oCAAU;aAArB,UAAsB,MAA2C;YAC7D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3D,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC5D,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;gBAC9B,CAAC;YACL,CAAC;QACL,CAAC;;;OAAA;IAGD,sBAAW,uCAAa;aAAxB,UAAyB,IAAY;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC;YACnF,CAAC;QACL,CAAC;;;OAAA;IAGD,sBAAW,uCAAa;aAAxB,UAAyB,IAAY;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC;YACnF,CAAC;QACL,CAAC;;;OAAA;IAEM,+BAAQ,GAAf;QAAA,iBAWC;QAVG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAmB;YAClD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAmB;YACrD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAe;YAC5C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAM,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;IACL,CAAC;IAEM,8BAAO,GAAd;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,8BAAO,GAAd,UAAe,KAAU;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,gCAAS,GAAhB,UAAiB,KAAU;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAEM,+BAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,2BAAI,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,4BAAK,GAAZ;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAK,GAAZ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,6BAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAyFL,mBAAC;AAAD,CAzQA,AAyQC;;AAxFM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,6zGA0CT;gBACD,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAChD,EAAG,EAAE;CACL,CAAC;AAEK,2BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAF6F,CAE7F,CAAC;AACK,2BAAc,GAA2C;IAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACrC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACvC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACrC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACrC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAClC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC3B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;IACpD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC7B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC5B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,YAAY,EAAG,EAAE,EAAE;IAC3D,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;IACxD,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAClC,CAAC","file":"completerComponent.js","sourceRoot":"","sourcesContent":["\"use strict\";\r\nimport { AfterViewChecked, Component, Input, Output, EventEmitter, OnInit, ViewChild, forwardRef, AfterViewInit, ElementRef } from \"@angular/core\";\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nimport { CtrCompleter } from \"../directives/completerDirective\";\r\nimport { CompleterData } from \"../services/completerDataService\";\r\nimport { CompleterService } from \"../services/completerService\";\r\nimport { CompleterItem } from \"./completerItemComponent\";\r\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS } from \"../globals\";\r\n\r\n\r\nimport \"rxjs/add/operator/catch\";\r\n\r\nconst noop = () => { };\r\n\r\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CompleterCmp),\r\n    multi: true\r\n};\r\n\r\n\r\n\r\nexport class CompleterCmp implements OnInit, ControlValueAccessor, AfterViewChecked, AfterViewInit {\r\n     public dataService: CompleterData;\r\n     public inputName = \"\";\r\n     public inputId: string = \"\";\r\n     public pause = PAUSE;\r\n     public minSearchLength = MIN_SEARCH_LENGTH;\r\n     public maxChars = MAX_CHARS;\r\n     public overrideSuggested = false;\r\n     public clearSelected = false;\r\n     public clearUnselected = false;\r\n     public fillHighlighted = true;\r\n     public placeholder = \"\";\r\n     public matchClass: string;\r\n     public fieldTabindex: number;\r\n     public autoMatch = false;\r\n     public disableInput = false;\r\n     public inputClass: string;\r\n     public autofocus = false;\r\n     public openOnFocus = false;\r\n     public initialValue: any;\r\n     public autoHighlight = false;\r\n     public label: string;\r\n\r\n    public focused: boolean = false;\r\n\r\n\r\n     public selected = new EventEmitter<CompleterItem>();\r\n     public highlighted = new EventEmitter<CompleterItem>();\r\n     public blur = new EventEmitter<void>();\r\n     public focusEvent = new EventEmitter<void>();\r\n     public opened = new EventEmitter<boolean>();\r\n     public keyup: EventEmitter<any> = new EventEmitter();\r\n     public keydown: EventEmitter<any> = new EventEmitter();\r\n\r\n     public completer: CtrCompleter;\r\n     public ctrInput: ElementRef;\r\n\r\n    public searchStr = \"\";\r\n    public control = new FormControl(\"\");\r\n\r\n    private displaySearching = true;\r\n    private displayNoResults = true;\r\n    private _onTouchedCallback: () => void = noop;\r\n    private _onChangeCallback: (_: any) => void = noop;\r\n    private _focus: boolean = false;\r\n    private _open: boolean = false;\r\n    private _textNoResults = TEXT_NO_RESULTS;\r\n    private _textSearching = TEXT_SEARCHING;\r\n\r\n    constructor(private completerService: CompleterService) { }\r\n\r\n    get value(): any { return this.searchStr; };\r\n\r\n    set value(v: any) {\r\n        if (v !== this.searchStr) {\r\n            this.searchStr = v;\r\n        }\r\n        // Propagate the change in any case\r\n        this._onChangeCallback(v);\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        if (this.autofocus) {\r\n            this._focus = true;\r\n        }\r\n    }\r\n\r\n    public ngAfterViewChecked(): void {\r\n        if (this._focus) {\r\n            this.ctrInput.nativeElement.focus();\r\n            this._focus = false;\r\n        }\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(value: any) {\r\n        this.searchStr = value;\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    \r\n    public set datasource(source: CompleterData | string | Array<any>) {\r\n        if (source) {\r\n            if (source instanceof Array) {\r\n                this.dataService = this.completerService.local(source);\r\n            } else if (typeof (source) === \"string\") {\r\n                this.dataService = this.completerService.remote(source);\r\n            } else {\r\n                this.dataService = source;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    public set textNoResults(text: string) {\r\n        if (this._textNoResults != text) {\r\n            this._textNoResults = text;\r\n            this.displayNoResults = this._textNoResults && this._textNoResults !== \"false\";\r\n        }\r\n    }\r\n\r\n    \r\n    public set textSearching(text: string) {\r\n        if (this._textSearching != text) {\r\n            this._textSearching = text;\r\n            this.displaySearching = this._textSearching && this._textSearching !== \"false\";\r\n        }\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.completer.selected.subscribe((item: CompleterItem) => {\r\n            this.selected.emit(item);\r\n        });\r\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\r\n            this.highlighted.emit(item);\r\n        });\r\n        this.completer.opened.subscribe((isOpen: boolean) => {\r\n            this._open = isOpen;\r\n            this.opened.emit(isOpen);\r\n        });\r\n    }\r\n\r\n    public onBlur() {\r\n        this.blur.emit();\r\n        this.onTouched();\r\n        if(this.searchStr === undefined || this.searchStr === \"\") {\r\n            this.focused = false;\r\n        }\r\n    }\r\n\r\n    public onFocus() {\r\n        this.focusEvent.emit();\r\n        this.onTouched();\r\n        this.focused = true;\r\n    }\r\n\r\n    public onKeyup(event: any) {\r\n        this.keyup.emit(event);\r\n    }\r\n\r\n    public onKeydown(event: any) {\r\n        this.keydown.emit(event);\r\n    }\r\n\r\n    public onChange(value: string) {\r\n        this.value = value;\r\n    }\r\n\r\n    public open() {\r\n        this.completer.open();\r\n    }\r\n\r\n    public close() {\r\n        this.completer.clear();\r\n    }\r\n\r\n    public focus(): void {\r\n        if (this.ctrInput) {\r\n            this.ctrInput.nativeElement.focus();\r\n        } else {\r\n            this._focus = true;\r\n        }\r\n    }\r\n\r\n    public isOpen() {\r\n        return this._open;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: \"ng2-completer\",\r\n    template: `\r\n        <div class=\"completer-holder md-form\" ctrCompleter>\r\n            \r\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\" class=\"completer-input form-control mdb-autocomplete\" ctrInput [ngClass]=\"inputClass\" \r\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\" [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\r\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\" \r\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\r\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\" \r\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\" (keydown)=\"onKeydown($event)\"\r\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\r\n            <label [ngClass]=\"{'active': focused}\">{{ label }}</label>\r\n            <div class=\"completer-dropdown-holder\"\r\n                *ctrList=\"dataService;\r\n                    minSearchLength: minSearchLength;\r\n                    pause: pause;\r\n                    autoMatch: autoMatch;\r\n                    initialValue: initialValue;\r\n                    autoHighlight: autoHighlight;\r\n                    let items = results;\r\n                    let searchActive = searching;\r\n                    let isInitialized = searchInitialized;\r\n                    let isOpen = isOpen;\">\r\n                <div class=\"completer-dropdown\" ctrDropdown *ngIf=\"isInitialized && isOpen && ((items.length > 0 || displayNoResults) || (searchActive && displaySearching))\">\r\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{_textSearching}}</div>\r\n                    <div *ngIf=\"!searchActive && (!items || items.length === 0)\" class=\"completer-no-results\">{{_textNoResults}}</div>\r\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\r\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\r\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\r\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\r\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\r\n                            </div>\r\n                            <div class=\"completer-item-text\" [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\r\n                                <completer-list-item class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\r\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\" class=\"completer-description\" [text]=\"item.description\"\r\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\r\n                                </completer-list-item>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CompleterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataService': [{ type: Input },],\n'inputName': [{ type: Input },],\n'inputId': [{ type: Input },],\n'pause': [{ type: Input },],\n'minSearchLength': [{ type: Input },],\n'maxChars': [{ type: Input },],\n'overrideSuggested': [{ type: Input },],\n'clearSelected': [{ type: Input },],\n'clearUnselected': [{ type: Input },],\n'fillHighlighted': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'matchClass': [{ type: Input },],\n'fieldTabindex': [{ type: Input },],\n'autoMatch': [{ type: Input },],\n'disableInput': [{ type: Input },],\n'inputClass': [{ type: Input },],\n'autofocus': [{ type: Input },],\n'openOnFocus': [{ type: Input },],\n'initialValue': [{ type: Input },],\n'autoHighlight': [{ type: Input },],\n'label': [{ type: Input },],\n'selected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'blur': [{ type: Output },],\n'focusEvent': [{ type: Output, args: [\"focus\", ] },],\n'opened': [{ type: Output },],\n'keyup': [{ type: Output },],\n'keydown': [{ type: Output },],\n'completer': [{ type: ViewChild, args: [CtrCompleter, ] },],\n'ctrInput': [{ type: ViewChild, args: [\"ctrInput\", ] },],\n'datasource': [{ type: Input },],\n'textNoResults': [{ type: Input },],\n'textSearching': [{ type: Input },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}