{"version":3,"sources":["../../../../src/app/typescripts/free/modals/modalBackdropComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,QAAA,EAAS,MAAO,eAAA,CAAgB;AAEhE,OAAO,EAAE,SAAA,EAAU,MAAO,qBAAA,CAAsB;AAChD,OAAO,EAAE,KAAA,EAAM,MAAO,+BAAA,CAAgC;AAEtD;IAGE,8BAAmB,OAA4B;QAFxC,YAAO,GAAW,IAAI,CAAC;QAG5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IACH,2BAAC;AAAD,CANA,AAMC,IAAA;;AAED,8EAA8E;AAE9E;IA4BE,gCAAmB,OAAkB,EAAE,QAAiB;QAF9C,aAAQ,GAAW,KAAK,CAAC;QAGjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IA9BD,sBAAW,8CAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAsB,KAAa;YACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,KAAK,CAAC,CAAC;QACxF,CAAC;;;OALA;IAOD,sBAAW,2CAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAmB,KAAa;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,EAAI,EAAE,KAAK,CAAC,CAAC;YACpF,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,KAAK,CAAC,CAAC;YACxF,CAAC;QACH,CAAC;;;OARA;IAiCH,6BAAC;AAAD,CA7CA,AA6CC;;AAbM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE,EAAE;gBACZ,2BAA2B;gBAC3B,IAAI,EAAE,EAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAC;aACpC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAH6F,CAG7F,CAAC","file":"modalBackdropComponent.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, Renderer } from '@angular/core';\r\n\r\nimport { ClassName } from './modalOptionsClass';\r\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\r\n\r\nexport class ModalBackdropOptions {\r\n  public animate:boolean = true;\r\n\r\n  public constructor(options:ModalBackdropOptions) {\r\n    Object.assign(this, options);\r\n  }\r\n}\r\n\r\n/** This component will be added as background layout for modals if enabled */\r\n\r\nexport class ModalBackdropComponent {\r\n  public get isAnimated():boolean {\r\n    return this._isAnimated;\r\n  }\r\n\r\n  public set isAnimated(value:boolean) {\r\n    this._isAnimated = value;\r\n    this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\r\n  }\r\n\r\n  public get isShown():boolean {\r\n    return this._isShown;\r\n  }\r\n\r\n  public set isShown(value:boolean) {\r\n    this._isShown = value;\r\n    this.renderer.setElementClass(this.element.nativeElement, `${ClassName.IN}`, value);\r\n    if (!isBs3()) {\r\n      this.renderer.setElementClass(this.element.nativeElement, `${ClassName.SHOW}`, value);\r\n    }\r\n  }\r\n\r\n  public element:ElementRef;\r\n  public renderer:Renderer;\r\n\r\n  protected _isAnimated:boolean;\r\n  protected _isShown:boolean = false;\r\n\r\n  public constructor(element:ElementRef, renderer:Renderer) {\r\n    this.element = element;\r\n    this.renderer = renderer;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'bs-modal-backdrop',\r\n  template: '',\r\n  // tslint:disable-next-line\r\n  host: {'class': ClassName.BACKDROP}\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}