{"version":3,"sources":["../../../../src/app/typescripts/free/tooltip/tooltipDirective.ts"],"names":[],"mappings":"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","file":"tooltipDirective.js","sourceRoot":"","sourcesContent":["import {\r\n  Directive, Input, TemplateRef, ViewContainerRef, Output, EventEmitter,\r\n  Renderer, ElementRef, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { TooltipContainerComponent } from './tooltipContainerComponent';\r\nimport { TooltipConfig } from './tooltipConfig';\r\nimport { ComponentLoaderFactory, ComponentLoader } from '../utils/component-loader';\r\nimport { OnChange } from '../utils/decorators';\r\n\r\n\r\nexport class TooltipDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as tooltip.\r\n   */\r\n  @OnChange()\r\n   public tooltip: string | TemplateRef<any>;\r\n  /** Fired when tooltip content changes */\r\n   public tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\r\n\r\n  /**\r\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n   public placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n   public triggers: string;\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n   public container: string;\r\n\r\n  /**\r\n   * Returns whether or not the tooltip is currently being shown\r\n   */\r\n  \r\n  public get isOpen(): boolean { return this._tooltip.isShown; }\r\n\r\n  public set isOpen(value: boolean) {\r\n    if (value) {this.show();} else {this.hide();}\r\n  }\r\n\r\n  /**\r\n   * Allows to disable tooltip\r\n   */\r\n   public isDisabled: boolean;\r\n\r\n  /**\r\n   * Emits an event when the tooltip is shown\r\n   */\r\n   public onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the tooltip is hidden\r\n   */\r\n   public onHidden: EventEmitter<any>;\r\n\r\n  /* tslint:disable */\r\n  /** @deprecated - please use `tooltip` instead */\r\n  \r\n  public set htmlContent(value: string | TemplateRef<any>) {\r\n    console.warn('tooltipHtml was deprecated, please use `tooltip` instead');\r\n    this.tooltip = value;\r\n  }\r\n\r\n  /** @deprecated - please use `placement` instead */\r\n  \r\n  public set _placement(value: string) {\r\n    console.warn('tooltipPlacement was deprecated, please use `placement` instead');\r\n    this.placement = value;\r\n  }\r\n\r\n  /** @deprecated - please use `isOpen` instead*/\r\n  \r\n  public set _isOpen(value: boolean) {\r\n    console.warn('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    this.isOpen = value;\r\n  }\r\n\r\n  public get _isOpen(): boolean {\r\n    console.warn('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    return this.isOpen;\r\n  }\r\n\r\n  /** @deprecated - please use `isDisabled` instead */\r\n  \r\n  public set _enable(value: boolean) {\r\n    console.warn('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    this.isDisabled = value === true;\r\n  }\r\n\r\n  public get _enable(): boolean {\r\n    console.warn('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    return this.isDisabled === true;\r\n  }\r\n\r\n  /** @deprecated - please use `container=\"body\"` instead */\r\n  \r\n  public set _appendToBody(value: boolean) {\r\n    console.warn('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\r\n    this.container = value ? 'body' : this.container;\r\n  }\r\n\r\n  public get _appendToBody(): boolean {\r\n    console.warn('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\r\n    return this.container === 'body';\r\n  }\r\n\r\n  /** @deprecated - removed, will be added to configuration */\r\n   public _animation: boolean = true;\r\n\r\n  /** @deprecated - will replaced with customClass */\r\n  \r\n  public set _popupClass(value: string) {\r\n    console.warn('tooltipClass deprecated');\r\n  }\r\n\r\n  /** @deprecated - removed */\r\n  \r\n  public set _tooltipContext(value: any) {\r\n    console.warn('tooltipContext deprecated');\r\n  }\r\n\r\n  /** @deprecated */\r\n   public _delay: number = 0;\r\n\r\n  /** @deprecated */\r\n   public _fadeDuration: number = 150;\r\n\r\n  /** @deprecated -  please use `triggers` instead */\r\n  \r\n  public get _tooltipTrigger(): string|Array<string> {\r\n    console.warn('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    return this.triggers;\r\n  };\r\n\r\n  public set _tooltipTrigger(value: string|Array<string>) {\r\n    console.warn('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    this.triggers = (value || '').toString();\r\n  };\r\n\r\n  /** @deprecated */\r\n   public tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /* tslint:enable */\r\n  protected _delayTimeoutId: any;\r\n\r\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\r\n\r\n  // tslint:disable-next-line\r\n  public constructor(_viewContainerRef: ViewContainerRef,\r\n                     _renderer: Renderer,\r\n                     _elementRef: ElementRef,\r\n                     cis: ComponentLoaderFactory,\r\n                     config: TooltipConfig) {\r\n    this._tooltip = cis\r\n      .createLoader<TooltipContainerComponent>(_elementRef, _viewContainerRef, _renderer)\r\n      .provide({provide: TooltipConfig, useValue: config});\r\n\r\n    Object.assign(this, config);\r\n    this.onShown = this._tooltip.onShown;\r\n    this.onHidden = this._tooltip.onHidden;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._tooltip.listen({\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    this.tooltipChange.subscribe((value: any) => {\r\n      if (!value) {\r\n        this._tooltip.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  public toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  public show(): void {\r\n    if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.tooltip) {\r\n      return;\r\n    }\r\n\r\n    const showTooltip = () => this._tooltip\r\n      .attach(TooltipContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({\r\n        content: this.tooltip,\r\n        placement: this.placement\r\n      });\r\n\r\n    if (this._delay) {\r\n      this._delayTimeoutId = setTimeout(() => { showTooltip(); }, this._delay);\r\n    } else {\r\n      showTooltip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  public hide(): void {\r\n    if (this._delayTimeoutId) {\r\n      clearTimeout(this._delayTimeoutId);\r\n      this._delayTimeoutId = undefined;\r\n    }\r\n\r\n    if (!this._tooltip.isShown) {\r\n      return;\r\n    }\r\n\r\n    this._tooltip.instance.classMap.in = false;\r\n    setTimeout(() => {\r\n      this._tooltip.hide();\r\n    }, this._fadeDuration);\r\n  }\r\n\r\n  public dispose() {\r\n    this._tooltip.dispose();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this._tooltip.dispose();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[tooltip], [tooltipHtml]',\r\n  exportAs: 'bs-tooltip'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_delay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}