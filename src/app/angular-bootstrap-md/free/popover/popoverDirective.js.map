{"version":3,"sources":["../../../../src/app/typescripts/free/popover/popoverDirective.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,KAAA,EAAO,MAAA,EAAyC,QAAA,EAC3D,UAAU,EAAe,gBAAA,EAC1B,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,aAAA,EAAc,MAAO,iBAAA,CAAkB;AAChD,OAAO,EAAE,sBAAA,EAAwC,MAAO,2BAAA,CAA4B;AACpF,OAAO,EAAE,yBAAA,EAA0B,MAAO,6BAAA,CAA8B;AAExE;;GAEG;AAEH;IA6CE,0BAAmB,WAAuB,EACvB,SAAmB,EACnB,iBAAmC,EACnC,OAAsB,EACtB,GAA2B;QAC5C,IAAI,CAAC,QAAQ,GAAG,GAAG;aAChB,YAAY,CAA4B,WAAW,EAAE,iBAAiB,EAAE,SAAS,CAAC;aAClF,OAAO,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACzC,CAAC;IA5BD,sBAAW,oCAAM;QAJjB;;WAEG;aAEH,cAA+B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;aAE9D,UAAkB,KAAc;YAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAAA,IAAI,CAAC,IAAI,EAAE,CAAC;YAAA,CAAC;YAAC,IAAI,CAAC,CAAC;gBAAA,IAAI,CAAC,IAAI,EAAE,CAAC;YAAA,CAAC;QAC/C,CAAC;;;OAJ6D;IA8B9D;;;OAGG;IACI,+BAAI,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,QAAQ;aACV,MAAM,CAAC,yBAAyB,CAAC;aACjC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;aAClB,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC;aACtC,IAAI,CAAC;YACJ,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,YAAY;SACzB,CAAC,CAAC;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;;OAGG;IACI,+BAAI,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;IACH,CAAC;IAED;;;OAGG;IACI,iCAAM,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,mCAAQ,GAAf;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW;SACxB,CAAC,CAAC;IACL,CAAC;IAEO,kCAAO,GAAd;QACC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAEM,sCAAW,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAsBH,uBAAC;AAAD,CAzIA,AAyIC;;AArBM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAC,EAAG,EAAE;CAC7E,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,aAAa,GAAG;IACvB,EAAC,IAAI,EAAE,sBAAsB,GAAG;CAC/B,EAN6F,CAM7F,CAAC;AACK,+BAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC9B,CAAC","file":"popoverDirective.js","sourceRoot":"","sourcesContent":["import {\r\n  Directive, Input, Output, EventEmitter, OnInit, OnDestroy, Renderer,\r\n  ElementRef, TemplateRef, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverConfig } from './popoverConfig';\r\nimport { ComponentLoaderFactory, ComponentLoader } from '../utils/component-loader';\r\nimport { PopoverContainerComponent } from './popoverContainerComponent';\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n\r\nexport class PopoverDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n   public popover: string | TemplateRef<any>;\r\n  /**\r\n   * Title of a popover.\r\n   */\r\n   public popoverTitle: string;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n   public placement: 'top' | 'bottom' | 'left' | 'right';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n   public triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n   public container: string;\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  \r\n  public get isOpen(): boolean { return this._popover.isShown; }\r\n\r\n  public set isOpen(value: boolean) {\r\n    if (value) {this.show();} else {this.hide();}\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n   public onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n   public onHidden: EventEmitter<any>;\r\n\r\n  private _popover: ComponentLoader<PopoverContainerComponent>;\r\n\r\n  public constructor(_elementRef: ElementRef,\r\n                     _renderer: Renderer,\r\n                     _viewContainerRef: ViewContainerRef,\r\n                     _config: PopoverConfig,\r\n                     cis: ComponentLoaderFactory) {\r\n    this._popover = cis\r\n      .createLoader<PopoverContainerComponent>(_elementRef, _viewContainerRef, _renderer)\r\n      .provide({provide: PopoverConfig, useValue: _config});\r\n    Object.assign(this, _config);\r\n    this.onShown = this._popover.onShown;\r\n    this.onHidden = this._popover.onHidden;\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  public show(): void {\r\n    if (this._popover.isShown) {\r\n      return;\r\n    }\r\n\r\n    this._popover\r\n      .attach(PopoverContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({\r\n        content: this.popover,\r\n        placement: this.placement,\r\n        title: this.popoverTitle\r\n      });\r\n    this.isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  public hide(): void {\r\n    if (this.isOpen) {\r\n      this._popover.hide();\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  public toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  public ngOnInit(): any {\r\n    this._popover.listen({\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n  }\r\n\r\n   public dispose() {\r\n    this._popover.dispose();\r\n  }\r\n\r\n  public ngOnDestroy(): any {\r\n    this._popover.dispose();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}