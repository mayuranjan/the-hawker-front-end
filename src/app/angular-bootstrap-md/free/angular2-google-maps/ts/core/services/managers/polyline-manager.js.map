{"version":3,"sources":["../../../../../../../../src/app/typescripts/free/angular2-google-maps/ts/core/services/managers/polyline-manager.ts"],"names":[],"mappings":"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","file":"polyline-manager.js","sourceRoot":"","sourcesContent":["import {Injectable, NgZone} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Observer} from 'rxjs/Observer';\r\n\r\nimport {SebmGoogleMapPolyline} from '../../directives/google-map-polyline';\r\nimport {SebmGoogleMapPolylinePoint} from '../../directives/google-map-polyline-point';\r\nimport {GoogleMapsAPIWrapper} from '../google-maps-api-wrapper';\r\nimport {LatLngLiteral, Polyline} from '../google-maps-types';\r\n\r\n\r\nexport class PolylineManager {\r\n  private _polylines: Map<SebmGoogleMapPolyline, Promise<Polyline>> =\r\n      new Map<SebmGoogleMapPolyline, Promise<Polyline>>();\r\n\r\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  private static _convertPoints(line: SebmGoogleMapPolyline): Array<LatLngLiteral> {\r\n    const path = line._getPoints().map((point: SebmGoogleMapPolylinePoint) => {\r\n      return <LatLngLiteral>{lat: point.latitude, lng: point.longitude};\r\n    });\r\n    return path;\r\n  }\r\n\r\n  addPolyline(line: SebmGoogleMapPolyline) {\r\n    const path = PolylineManager._convertPoints(line);\r\n    const polylinePromise = this._mapsWrapper.createPolyline({\r\n      clickable: line.clickable,\r\n      draggable: line.draggable,\r\n      editable: line.editable,\r\n      geodesic: line.geodesic,\r\n      strokeColor: line.strokeColor,\r\n      strokeOpacity: line.strokeOpacity,\r\n      strokeWeight: line.strokeWeight,\r\n      visible: line.visible,\r\n      zIndex: line.zIndex,\r\n      path: path\r\n    });\r\n    this._polylines.set(line, polylinePromise);\r\n  }\r\n\r\n  updatePolylinePoints(line: SebmGoogleMapPolyline): Promise<void> {\r\n    const path = PolylineManager._convertPoints(line);\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => { return this._zone.run(() => { l.setPath(path); }); });\r\n  }\r\n\r\n  setPolylineOptions(line: SebmGoogleMapPolyline, options: {[propName: string]: any}):\r\n      Promise<void> {\r\n    return this._polylines.get(line).then((l: Polyline) => { l.setOptions(options); });\r\n  }\r\n\r\n  deletePolyline(line: SebmGoogleMapPolyline): Promise<void> {\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => {\r\n      return this._zone.run(() => {\r\n        l.setMap(null);\r\n        this._polylines.delete(line);\r\n      });\r\n    });\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, line: SebmGoogleMapPolyline): Observable<T> {\r\n    return Observable.create((observer: Observer<T>) => {\r\n      this._polylines.get(line).then((l: Polyline) => {\r\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: GoogleMapsAPIWrapper, },\n{type: NgZone, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}