{"version":3,"sources":["../../../../../../../src/app/typescripts/free/angular2-google-maps/ts/core/directives/google-map-polyline.ts"],"names":[],"mappings":"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","file":"google-map-polyline.js","sourceRoot":"","sourcesContent":["import { AfterContentInit, ContentChildren, Directive, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { PolyMouseEvent } from '../services/google-maps-types';\r\nimport { PolylineManager } from '../services/managers/polyline-manager';\r\n\r\nimport { SebmGoogleMapPolylinePoint } from './google-map-polyline-point';\r\n\r\nlet polylineId = 0;\r\n/**\r\n * SebmGoogleMapPolyline renders a polyline on a \r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from 'angular2/core';\r\n * import { SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint } from\r\n * 'angular2-google-maps/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  directives: [SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint],\r\n *  styles: [`\r\n *    .sebm-google-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <sebm-google-map-polyline>\r\n *          <sebm-google-map-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\r\n *          </sebm-google-map-polyline-point>\r\n *          <sebm-google-map-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\r\n *          </sebm-google-map-polyline-point>\r\n *      </sebm-google-map-polyline>\r\n *    </sebm-google-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n\r\nexport class SebmGoogleMapPolyline implements OnDestroy, OnChanges, AfterContentInit {\r\n  /**\r\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\r\n   */\r\n  clickable: boolean = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\r\n   * mode of dragging. Defaults to false.\r\n   */\r\n  draggable: boolean = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this shape by dragging the control points shown at the\r\n   * vertices and on each segment. Defaults to false.\r\n   */\r\n  editable: boolean = false;\r\n\r\n  /**\r\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\r\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\r\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\r\n   * are maintained relative to the surface of the earth. Defaults to false.\r\n   */\r\n  geodesic: boolean = false;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0.\r\n   */\r\n  strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  strokeWeight: number;\r\n\r\n  /**\r\n   * Whether this polyline is visible on the map. Defaults to true.\r\n   */\r\n  visible: boolean = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the DOM click event is fired on the Polyline.\r\n   */\r\n  lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\r\n   */\r\n  lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the polyline.\r\n   */\r\n  lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the polyline.\r\n   */\r\n  lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the polyline.\r\n   */\r\n  lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\r\n   */\r\n  lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\r\n   */\r\n  lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseout.\r\n   */\r\n  lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseover.\r\n   */\r\n  lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\r\n   */\r\n  lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This even is fired when the Polyline is right-clicked on.\r\n   */\r\n  lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n   points: QueryList<SebmGoogleMapPolylinePoint>;\r\n\r\n  private static _polylineOptionsAttributes: Array<string> = [\r\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\r\n    'zIndex'\r\n  ];\r\n\r\n  private _id: string;\r\n  private _polylineAddedToManager: boolean = false;\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.points.length) {\r\n      this.points.forEach((point: SebmGoogleMapPolylinePoint) => {\r\n        const s = point.positionChanged.subscribe(\r\n            () => { this._polylineManager.updatePolylinePoints(this); });\r\n        this._subscriptions.push(s);\r\n      });\r\n    }\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n    }\r\n    const s = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\r\n    this._subscriptions.push(s);\r\n    this._polylineManager.updatePolylinePoints(this);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n      return;\r\n    }\r\n\r\n    let options: {[propName: string]: any} = {};\r\n    const optionKeys = Object.keys(changes).filter(\r\n        k => SebmGoogleMapPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\r\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\r\n    this._polylineManager.setPolylineOptions(this, options);\r\n  }\r\n\r\n  private _init() {\r\n    this._polylineManager.addPolyline(this);\r\n    this._polylineAddedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const handlers = [\r\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\r\n      {name: 'dbclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\r\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\r\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\r\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\r\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\r\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\r\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\r\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\r\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\r\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\r\n    ];\r\n    handlers.forEach((obj) => {\r\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  _getPoints(): Array<SebmGoogleMapPolylinePoint> {\r\n    if (this.points) {\r\n      return this.points.toArray();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  id(): string { return this._id; }\r\n\r\n  ngOnDestroy() {\r\n    this._polylineManager.deletePolyline(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: 'sebm-google-map-polyline',\r\n  inputs: [\r\n    'clickable', 'draggable: polylineDraggable', 'editable', 'geodesic', 'strokeColor',\r\n    'strokeWeight', 'strokeOpacity', 'visible', 'zIndex'\r\n  ],\r\n  outputs: [\r\n    'lineClick', 'lineDblClick', 'lineDrag', 'lineDragEnd', 'lineMouseDown', 'lineMouseMove',\r\n    'lineMouseOut', 'lineMouseOver', 'lineMouseUp', 'lineRightClick'\r\n  ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PolylineManager, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'points': [{ type: ContentChildren, args: [SebmGoogleMapPolylinePoint, ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}